<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>backend-scaffold</artifactId>
    <groupId>com.codeforcommunity</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>persist</artifactId>

  <properties>
    <flyway.version>7.1.0</flyway.version>
  </properties>

  <build>
    <plugins>
      <!-- Read database properties file -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>../common/src/main/resources/properties/server.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Generate jOOQ classes from our sql file -->
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>3.12.4</version>

        <executions>
          <execution>
            <id>jooq-codegen</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.12.0.xsd"
                       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                       xsi:schemaLocation="http://www.jooq.org/xsd/jooq-codegen-3.12.0.xsd http://www.jooq.org/xsd/jooq-codegen-3.12.0.xsd">
          <generator>
            <generate>
              <pojos>true</pojos>
            </generate>
            <database>
              <name>org.jooq.meta.extensions.ddl.DDLDatabase</name>
              <properties>

                <!-- Specify the location of your SQL script.
                     You may use ant-style file matching, e.g. /path/**/to/*.sql
                     Where:
                     - ** matches any directory subtree
                     - * matches any number of characters in a directory / file name
                     - ? matches a single character in a directory / file name -->
                <property>
                  <key>scripts</key>
                  <value>persist/src/main/resources/db/migration/*.sql</value>
                </property>

                <!-- The sort order of the scripts within a directory, where:
                     - semantic: sorts versions, e.g. v-3.10.0 is after v-3.9.0 (default)
                     - alphanumeric: sorts strings, e.g. v-3.10.0 is before v-3.9.0
                     - flyway: sorts files the same way as flyway does
                     - none: doesn't sort directory contents after fetching them from the directory -->
                <property>
                  <key>sort</key>
                  <value>flyway</value>
                </property>

                <!-- The default schema for unqualified objects:
                     - public: all unqualified objects are located in the PUBLIC (upper case) schema
                     - none: all unqualified objects are located in the default schema (default) -->
                <property>
                  <key>unqualifiedSchema</key>
                  <value>none</value>
                </property>

                <!-- The default name case for unquoted objects:
                     - as_is: unquoted object names are kept unquoted
                     - upper: unquoted object names are turned into upper case (most databases)
                     - lower: unquoted object names are turned into lower case (e.g. PostgreSQL) -->
                <property>
                  <key>defaultNameCase</key>
                  <value>lower</value>
                </property>
              </properties>

              <forcedTypes>
                <forcedType>
                  <!-- Enum converter for roles -->
                  <userType>com.codeforcommunity.enums.PrivilegeLevel</userType>
                  <enumConverter>true</enumConverter>

                  <includeExpression>.*\.privilege_level</includeExpression>
                  <includeTypes>.*</includeTypes>
                  <nullability>NOT_NULL</nullability>
                </forcedType>

                <!-- Enum converter for verification keys -->
                <forcedType>
                  <userType>com.codeforcommunity.enums.VerificationKeyType</userType>
                  <enumConverter>true</enumConverter>

                  <includeExpression>.*\.verification_keys\.type</includeExpression>
                  <includeTypes>.*</includeTypes>
                  <nullability>NOT_NULL</nullability>
                </forcedType>
              </forcedTypes>

            </database>
          </generator>
        </configuration>
      </plugin>

      <!-- Used for versioning our database -->
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>${flyway.version}</version>
        <configuration>
          <!-- All the database configuration stuff -->
          <!--suppress UnresolvedMavenProperty -->
          <driver>${database_driver}</driver>
          <!--suppress UnresolvedMavenProperty -->
          <url>${database_url}</url>
          <!--suppress UnresolvedMavenProperty -->
          <user>${database_username}</user>
          <!--suppress UnresolvedMavenProperty -->
          <password>${database_password}</password>

          <schemas>
            <schema>public</schema>
          </schemas>
          <encoding>ISO-8859-1</encoding>
          <cleanDisabled>true</cleanDisabled>
        </configuration>
        <executions>
          <execution>
            <id>flyway database migration</id>
            <phase>pre-integration-test</phase>
            <goals>
              <!--<goal>clean</goal>-->
              <goal>migrate</goal>
              <goal>info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.codeforcommunity</groupId>
      <artifactId>common</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta-extensions</artifactId>
    </dependency>

    <!-- Used to manage database versioning -->
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flyway.version}</version>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
  </dependencies>

</project>
